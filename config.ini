# Arquivo salvo em UTF-8. Não utilizar ANSI!

# ======================================================================
# config.ini — Configuração Principal do Pipeline Op_Trader
# ----------------------------------------------------------------------
# - Todas as opções e comentários estão 100% aderentes ao código real.
# - Comentários sempre refletem a implementação atual e as regras do pipeline.
# - Parâmetros críticos para rastreabilidade e não ambiguidade.
# ======================================================================

[DATA]
# ----------------------------------------------------------------------
# Configurações principais de coleta, diretórios, períodos e pipeline.
# ----------------------------------------------------------------------

# Lista de símbolos (separados por vírgula). Usado o primeiro se não passar --symbol na CLI.
# Exemplo: EURUSD,GBPUSD,USDJPY
symbols = EURUSD,GBPUSD,USDJPY

# Lista de timeframes (separados por vírgula). Usado o primeiro se não passar --timeframe na CLI.
# Valores aceitos: M1, M5, M15, M30, H1, H4, D1, W1, MN1
timeframes = H1

# Data inicial (YYYY-MM-DD). Fallback se não passar --start-date na CLI.
#start_date = 2020-01-01
start_date = 2020-01-01

# Data final (YYYY-MM-DD). Fallback se não passar --end-date na CLI.
end_date = 2025-06-10

# Diretório para dados brutos (raw, coleta)
raw_dir = data/raw

# Diretório para dados limpos (após DataCleaner)
cleaned_dir = data/cleaned

# Diretório para dados corrigidos (após OutlierGapCorrector)
corrected_dir = data/corrected

# Diretório para dados com features calculadas (após FeatureEngineer, **NUNCA normalizado**)
features_dir = data/features

# Diretório para dados final normalizados (após ScalerUtils, apenas para MLP)
features_normalized_dir = data/features_normalized

# Diretório para arquivos de scaler tabular (.pkl) (apenas para MLP)
scaler_dir = data/scaler

# Diretório para dados finais do pipeline PPO (apenas para RL)
final_ppo_dir = data/final_ppo

# Diretório para dados finais do pipeline MLP (apenas para supervisão)
final_mlp_dir = data/final_mlp

# Diretório para artefatos VecNormalize (apenas para PPO)
vecnormalize_dir = data/vecnormalize

# Fontes possíveis de volume (por prioridade - real_volume,tick_volume,volume_real).
volume_sources = real_volume,tick_volume,volume_real

# Coluna de volume a ser usada. Se vazio, auto-selecionada pelo pipeline (padrão: tick_volume).
volume_column = tick_volume

# Tipo de pipeline/modelo a ser processado:
#   ppo   = somente RL (NUNCA normaliza colunas tabulares, NÃO gera features_normalized nem scaler.pkl)
#   mlp   = somente supervisão (OBRIGA normalização tabular, gera features_normalized e scaler.pkl)
#   ambos = salva ambos fluxos separadamente, nunca sobrescreve arquivos de outro pipeline
pipeline_type = mlp

# Broker/fonte de dados (ex: mt5, binance)
broker = mt5

# Caminho para config extra do broker (json/yaml), se necessário (opcional)
broker_extra_config =

# ----------------------------------------------------------------------

[GAP_CORRECTOR]
# Estratégia para gaps: forward_fill, backward_fill, interpolate, drop (default: forward_fill)
gap_strategy = forward_fill
# Tolerância máxima para preenchimento (em candles)
max_gap_tolerance = 5

[OUTLIER_CORRECTOR]
# Estratégia: zscore, iqr, rolling (default: zscore)
outlier_strategy = zscore
# Limite (default: 3.0 para zscore)
outlier_threshold = 3.0

# ----------------------------------------------------------------------

[FEATURE_ENGINEER]
# ==============================================================================
# Configuração de cálculo de features técnicas — Op_Trader
# ==============================================================================
# Cada parâmetro está precedido por comentário explicativo, conforme padrão do projeto.
# Sempre mantenha esta seção 100% aderente ao FeatureCalculator e documentação.
# ==============================================================================

# ------------------------------------------------------------------------------
# Lista de features a calcular
# Defina aqui as features desejadas, separadas por vírgula.
# Mantenha sempre sincronizada com o FeatureCalculator e os parâmetros abaixo.
# ------------------------------------------------------------------------------
features = ema_fast, ema_slow, rsi, macd_hist, atr, bb_width, return_pct, candle_direction, volume_relative, pullback, hammer_pattern, inverted_hammer_pattern, roc_5, roc_10, roc_20, momentum_3, momentum_5, williams_r, stoch_k, stoch_d, adx, cci, trix, atr_normalized, realized_vol_5, realized_vol_10, parkinson_vol, gap_analysis, breakout_signals, support_resistance, pivot_points, fibonacci_levels, price_channels, session_phase, day_of_week, week_of_month, market_hours, intraday_mean_reversion, trend_strength, market_regime, volatility_regime, risk_adjusted_return, max_drawdown_risk, sharpe_estimate, risk_on_off, higher_tf_trend, daily_range_position, weekly_momentum, price_clusters, anomaly_score, regime_probability, forecast_error, delta_points

# ------------------------------------------------------------------------------
# Indicador: ema_fast
# Média móvel exponencial rápida.
# Parâmetro: janela (número de períodos para média).
# ------------------------------------------------------------------------------
ema_fast_window = 20

# ------------------------------------------------------------------------------
# Indicador: ema_slow
# Média móvel exponencial lenta.
# Parâmetro: janela (número de períodos para média).
# ------------------------------------------------------------------------------
ema_slow_window = 50

# ------------------------------------------------------------------------------
# Indicador: rsi
# Índice de Força Relativa.
# Parâmetro: janela de cálculo.
# ------------------------------------------------------------------------------
rsi_window = 14

# ------------------------------------------------------------------------------
# Indicador: macd_hist
# Histograma do MACD (diferença entre linha MACD e sinal).
# Parâmetros: macd_short, macd_long, macd_signal (janelas).
# ------------------------------------------------------------------------------
macd_short = 12
macd_long = 26
macd_signal = 9

# ------------------------------------------------------------------------------
# Indicador: atr
# Average True Range (volatilidade).
# Parâmetro: janela de cálculo.
# ------------------------------------------------------------------------------
atr_window = 14

# ------------------------------------------------------------------------------
# Indicador: atr_normalized
# ATR normalizado pelo preço de fechamento.
# Parâmetro: janela do ATR.
# ------------------------------------------------------------------------------
atr_normalized_window = 14

# ------------------------------------------------------------------------------
# Indicador: bb_width
# Largura das Bandas de Bollinger.
# Parâmetro: janela das bandas.
# ------------------------------------------------------------------------------
bb_window = 20

# ------------------------------------------------------------------------------
# Indicador: return_pct
# Retorno percentual do candle (close / close_anterior - 1).
# Não possui parâmetro configurável.
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Indicador: candle_direction
# Direção do candle: +1 (alta), 0 (neutro), -1 (baixa).
# Não possui parâmetro configurável.
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Indicador: volume_relative
# Volume relativo ao histórico recente.
# Parâmetro: janela para média de referência.
# ------------------------------------------------------------------------------
volume_relative_window = 20

# ------------------------------------------------------------------------------
# Indicador: pullback
# Distância do preço em relação à média móvel.
# Parâmetro: janela da média móvel.
# ------------------------------------------------------------------------------
pullback_window = 20

# ------------------------------------------------------------------------------
# Indicador: hammer_pattern / inverted_hammer_pattern
# Detecta padrões de candle martelo ou martelo invertido.
# Parâmetro: janela de observação.
# ------------------------------------------------------------------------------
hammer_pattern_window = 5
inverted_hammer_pattern_window = 5

# ------------------------------------------------------------------------------
# Indicador: roc_5, roc_10, roc_20
# Rate of Change (variação percentual em N períodos).
# Parâmetro: janela de cálculo.
# ------------------------------------------------------------------------------
roc_5_window = 5
roc_10_window = 10
roc_20_window = 20

# ------------------------------------------------------------------------------
# Indicador: momentum_3, momentum_5
# Diferença do preço atual versus N candles atrás.
# Parâmetro: lag (número de períodos).
# ------------------------------------------------------------------------------
momentum_3_lag = 3
momentum_5_lag = 5

# ------------------------------------------------------------------------------
# Indicador: williams_r
# Williams %R (oscilador de sobrecompra/sobrevenda).
# Parâmetro: janela de cálculo.
# ------------------------------------------------------------------------------
williams_r_window = 14

# ------------------------------------------------------------------------------
# Indicador: stoch_k, stoch_d
# Oscilador Estocástico (%K e %D).
# Parâmetros: janela do %K e média do %D.
# ------------------------------------------------------------------------------
stoch_k_window = 14
stoch_d_window = 3

# ------------------------------------------------------------------------------
# Indicador: adx
# Average Directional Index (força da tendência).
# Parâmetro: janela de cálculo.
# ------------------------------------------------------------------------------
adx_window = 14

# ------------------------------------------------------------------------------
# Indicador: cci
# Commodity Channel Index.
# Parâmetro: janela de cálculo.
# ------------------------------------------------------------------------------
cci_window = 20

# ------------------------------------------------------------------------------
# Indicador: trix
# TRIX (Triple Exponential Average).
# Parâmetro: janela de cálculo.
# ------------------------------------------------------------------------------
trix_window = 15

# ------------------------------------------------------------------------------
# Indicador: realized_vol_5, realized_vol_10
# Volatilidade realizada (desvio padrão dos retornos).
# Parâmetro: janela de cálculo.
# ------------------------------------------------------------------------------
realized_vol_5_window = 5
realized_vol_10_window = 10

# ------------------------------------------------------------------------------
# Indicador: parkinson_vol
# Estimador de volatilidade de Parkinson (usa high/low).
# Parâmetro: janela de cálculo.
# ------------------------------------------------------------------------------
parkinson_vol_window = 10

# ------------------------------------------------------------------------------
# Indicador: gap_analysis
# Detecta gaps de abertura acima do threshold.
# Parâmetro: threshold percentual.
# ------------------------------------------------------------------------------
gap_threshold = 0.002

# ------------------------------------------------------------------------------
# Indicador: breakout_signals
# Detecta rompimentos do range dos últimos N candles.
# Parâmetros: janela de lookback e threshold de breakout.
# ------------------------------------------------------------------------------
breakout_window = 20
breakout_threshold = 0.002

# ------------------------------------------------------------------------------
# Indicador: support_resistance
# Distância para suporte/resistência (máximos/mínimos recentes).
# Parâmetro: janela de lookback.
# ------------------------------------------------------------------------------
support_resistance_lookback = 20

# ------------------------------------------------------------------------------
# Indicador: pivot_points
# Calcula níveis de pivô clássicos.
# Parâmetro: método de cálculo (classic, fibonacci, camarilla).
# ------------------------------------------------------------------------------
pivot_points_method = classic

# ------------------------------------------------------------------------------
# Indicador: fibonacci_levels
# Calcula níveis de Fibonacci em janelas móveis.
# Parâmetro: janela de lookback.
# ------------------------------------------------------------------------------
fibonacci_levels_lookback = 20

# ------------------------------------------------------------------------------
# Indicador: price_channels
# Calcula canais de preço pelo high/low em janela móvel.
# Parâmetro: janela de cálculo.
# ------------------------------------------------------------------------------
price_channels_window = 20

# ------------------------------------------------------------------------------
# Indicador: session_phase
# Classifica candle conforme fase da sessão (ex: abertura, meio, fechamento).
# Parâmetro: número de bins/fases.
# ------------------------------------------------------------------------------
session_phase_bins = 3

# ------------------------------------------------------------------------------
# Indicador: day_of_week
# Codifica o dia da semana do candle (0 = segunda, 6 = domingo).
# Parâmetro: formato de saída.
# ------------------------------------------------------------------------------
day_of_week_format = int

# ------------------------------------------------------------------------------
# Indicador: week_of_month
# Indica qual semana do mês pertence o candle.
# Parâmetro: modo de cálculo.
# ------------------------------------------------------------------------------
week_of_month_mode = simple

# ------------------------------------------------------------------------------
# Indicador: market_hours
# Classifica cada candle conforme a sessão de mercado em que ocorre.
# Como funciona:
# - Para cada candle, identifica em qual sessão está (por ordem).
# - Codifica como número inteiro: 0 = primeira sessão, 1 = segunda, etc.
# - Fora das faixas, recebe -1.
# Parâmetro:
# - Lista ordenada das sessões a considerar. Aceita: london, newyork, tokyo, sydney, frankfurt, etc.
# - Exemplo: market_hours_session = london, newyork, tokyo
# Resultado esperado:
# - A coluna "market_hours" terá valores inteiros: 0 (london), 1 (newyork), 2 (tokyo), -1 (fora de sessão)
# Observação:
# - Os horários padrão de cada sessão são fixos no código, mas podem ser tornados parametrizáveis conforme necessidade futura.
# ------------------------------------------------------------------------------
market_hours_session = london, newyork, tokyo

# ------------------------------------------------------------------------------
# Indicador: intraday_mean_reversion
# Distância do preço para a média do dia.
# Parâmetro: janela de cálculo.
# ------------------------------------------------------------------------------
intraday_mean_window = 20

# ------------------------------------------------------------------------------
# Indicador: trend_strength
# Força do movimento (ex: amplitude/ATR).
# Parâmetro: janela de cálculo.
# ------------------------------------------------------------------------------
trend_strength_window = 14

# ------------------------------------------------------------------------------
# Indicador: market_regime
# Classifica regime de mercado (tendência/sideways).
# Parâmetro: método de detecção.
# ------------------------------------------------------------------------------
market_regime_method = std

# ------------------------------------------------------------------------------
# Indicador: volatility_regime
# Classifica regime de volatilidade (alta/baixa).
# Parâmetro: método de detecção.
# ------------------------------------------------------------------------------
volatility_regime_method = atr

# ------------------------------------------------------------------------------
# Indicador: risk_adjusted_return
# Retorno ajustado ao risco (ex: retorno/ATR).
# Parâmetro: janela de cálculo.
# ------------------------------------------------------------------------------
risk_adjusted_window = 14

# ------------------------------------------------------------------------------
# Indicador: max_drawdown_risk
# Drawdown máximo em janela móvel.
# Parâmetro: janela de cálculo.
# ------------------------------------------------------------------------------
max_drawdown_window = 20

# ------------------------------------------------------------------------------
# Indicador: sharpe_estimate
# Estimativa de Sharpe ratio local (rolling window).
# Parâmetro: janela de cálculo.
# ------------------------------------------------------------------------------
sharpe_window = 20

# ------------------------------------------------------------------------------
# Indicador: risk_on_off
# Sinal de risco ON/OFF baseado em volatilidade e tendência.
# Não possui parâmetro específico nesta versão.
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Indicador: higher_tf_trend
# Tendência do timeframe superior.
# Parâmetro: timeframe superior e janela de cálculo.
# ------------------------------------------------------------------------------
higher_tf = H1
higher_tf_trend_window = 10

# ------------------------------------------------------------------------------
# Indicador: daily_range_position
# Posição do close no range do dia.
# Parâmetro: janela de lookback.
# ------------------------------------------------------------------------------
daily_range_lookback = 1

# ------------------------------------------------------------------------------
# Indicador: weekly_momentum
# Retorno semanal (close atual - close X dias atrás).
# Parâmetro: lag (número de dias).
# ------------------------------------------------------------------------------
weekly_momentum_lag = 5

# ------------------------------------------------------------------------------
# Indicador: price_clusters
# Clusterização de preços (ex: K-means).
# Parâmetros: número de clusters e método.
# ------------------------------------------------------------------------------
price_clusters_n = 3
price_clusters_method = kmeans

# ------------------------------------------------------------------------------
# Indicador: anomaly_score
# Score de anomalia (Isolation Forest, One-Class SVM).
# Parâmetros: método e janela.
# ------------------------------------------------------------------------------
anomaly_score_method = isolation_forest
anomaly_score_window = 20

# ------------------------------------------------------------------------------
# Indicador: regime_probability
# Probabilidade de regime via clustering/HMM.
# Parâmetros: método e número de estados.
# ------------------------------------------------------------------------------
regime_probability_method = hmm
regime_probability_states = 2

# ------------------------------------------------------------------------------
# Indicador: forecast_error
# Erro de previsão por modelos simples (rolling mean, ARIMA).
# Parâmetros: método e janela.
# ------------------------------------------------------------------------------
forecast_error_method = rolling_mean
forecast_error_window = 5

# ------------------------------------------------------------------------------
# Indicador: delta_points
# Calcula o máximo de pontos (pips) possível ao olhar N candles à frente.
# Parâmetros:
# - lookforward: janela para frente (ex: 12 = 1h no M5)
# - pip_size: tamanho do pip (ex: 0.0001 para FX majors)
# - method: 'optimal_action', 'trend_following', 'mean_reversion'
# - min_hold: mínimo de candles a segurar
# ------------------------------------------------------------------------------
delta_points_lookforward = 12
delta_points_pip_size = 0.0001
delta_points_method = optimal_action
delta_points_min_hold = 3

# ------------------------------------------------------------------------------
# Parâmetro genérico para features que aceitam janela customizada.
# Use este valor como fallback caso algum parâmetro específico não seja informado.
# ------------------------------------------------------------------------------
default_window = 14

# ----------------------------------------------------------------------

[FEATURE_SELECTOR]
# ======================================================================
# Configuração do utilitário de seleção automática de features
# ----------------------------------------------------------------------
# - Todos os parâmetros têm efeito somente quando o DataPipeline chama
#   FeatureSelector (etapas _finalize_ppo / _finalize_mlp).
# - Podem ser sobrescritos por flags CLI em run_pipeline.py, caso deseje.
# ======================================================================

# Coluna alvo para calcular importância (PPO usa um target contínuo;
# MLP costuma usar classificação ou regressão, ajuste conforme modelo)
target_column               = delta_points

# Limiar de correlação acima do qual uma feature é descartada; 0–1
correlation_threshold        = 0.95

# Limiar mínimo do score combinado (RF + Permutation) para manter a feature; 0–1
importance_threshold         = 0.005

# Proporção do dataset reservada para teste (hold-out); 0–1
test_size                    = 0.20

# Reprodutibilidade
random_state                 = 42

# Random Forest – nº de árvores
n_estimators                 = 200

# Permutation Importance – repetições
permutation_repeats          = 10

# Normalização (aplicada **apenas** para modelo mlp)
; standard/minmax
scaler_type                  = standard

# ----------------------------------------------------------------------

[DIAGNOSIS]
# Nível de log padrão: NONE, ERROR, WARNING, INFO, DEBUG (default: DEBUG)
log_level = DEBUG
# Nível detalhado de debug: DEBUG/INFO/WARNING/ERROR/NONE (default: DEBUG)
debug_level = DEBUG
# Tamanho máximo do arquivo de log
max_log_size = 10MB
# Quantidade de arquivos de backup de log
backup_count = 5

# ----------------------------------------------------------------------

[TRADING]
# ----------------------------------------------------------------------
# Configuração do ambiente de trading/gestão de risco e posições.
# ----------------------------------------------------------------------
max_positions = 3
risk_per_trade = 0.02
max_daily_loss = 0.05
stop_loss_factor = 0.02
take_profit_factor = 0.04
allow_hedge = false  # Permite hedge? (true/false)

[ENV]
# Modo do ambiente: batch/streaming/long/short (default: batch)
mode = batch
initial_balance = 100000
sl_pct = 1.5
tp_pct = 2.0
position_size_pct = 0.05
max_episode_steps = 500
reward_components = pnl,drawdown,time_penalty,trade_cost,atr_risk
window_size = 120

# Caminho para features/scaler já prontos (opcional)
# features_file =
# scaler_file =

[REWARD]
reward_weights = pnl=1.0,drawdown=-0.5,time_penalty=-0.1,trade_cost=-0.05,atr_risk=0.7

[PPO_LONG]
learning_rate = 0.0003
batch_size = 128
n_steps = 2048
n_epochs = 10
hidden_layers = 64,64
activation = relu
optimizer = adam
clip_range = 0.2
dropout = 0.1

# ----------------------------------------------------------------------
# Outras seções/modelos podem ser adicionados conforme expansão do projeto
# ----------------------------------------------------------------------

# ----------------------------------------------------------------------
# Itens recomendados para rastreabilidade/auditoria
# ----------------------------------------------------------------------

# Diretório para salvar meta.json de cada artefato (default: junto com o .csv)
# meta_dir =

# Caminho para arquivo hash da configuração (opcional, para auditoria externa)
# config_hash_file = data/config_hash.txt

# Versão do schema de features (caso versionamento seja importante para auditoria)
# features_schema_version = v1.0

# Habilitar/desabilitar geração de meta.json para cada etapa
# save_meta = true

# Documentação dos arquivos de saída esperados:
# - .csv: dados brutos, limpos, corrigidos, features, features_normalized, final
# - .json: meta de cada etapa
# - .pkl: scaler tabular (MLP), VecNormalize (PPO)

# ----------------------------------------------------------------------
